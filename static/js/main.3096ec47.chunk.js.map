{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","secondurl","fetchData","country","a","changeableUrl","axios","get","data","cases","todayCases","deaths","todayDeaths","recovered","active","updated","fetchDailyData","timeline","fetchCountries","countries","map","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","date","confirmed","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","value","i","key","Info","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","App","state","setState","this","image","src","alt","Cards","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,sBAAsB,OAAS,wB,qKCE5LC,EAAY,wBAELC,EAAS,uCAAG,WAAOC,GAAP,iCAAAC,EAAA,6DACnBC,EADmB,UACAJ,EADA,QAGnBE,IACFE,EAAa,UAAMJ,EAAN,sBAA6BE,IAG9B,UAAVA,IACFE,EAAa,UAAMJ,EAAN,SARQ,kBAY0EK,IAAMC,IAAIF,GAZpF,2BAYbG,KAAQC,EAZK,EAYLA,MAAOC,EAZF,EAYEA,WAAYC,EAZd,EAYcA,OAAQC,EAZtB,EAYsBA,YAAaC,EAZnC,EAYmCA,UAAWC,EAZ9C,EAY8CA,OAAQC,EAZtD,EAYsDA,QAZtD,kBAcd,CAAEN,QAAMC,aAAYG,YAAWF,SAAOC,cAAaE,SAAQC,YAd7C,2HAAH,sDAoBTC,EAAc,uCAAG,WAAOb,GAAP,iBAAAC,EAAA,+EAEWE,IAAMC,IAAN,UAAaN,EAAb,gCAFX,uBAEVgB,EAFU,EAElBT,KAAQS,SAFU,kBAMnB,CAACR,MAAMQ,EAASR,MAAOI,UAAUI,EAASJ,UAAWF,OAAOM,EAASN,OAAQG,OAAOG,EAASH,SAN1E,wHAAH,sDAYdI,EAAc,uCAAG,8BAAAd,EAAA,+EAEYE,IAAMC,IAAN,UArC9B,iCAqC8B,eAFZ,uBAEVY,EAFU,EAElBX,KAAQW,UAFU,kBAInBA,EAAUC,KAAI,SAACjB,GAAD,OAAaA,EAAQkB,SAJhB,wHAAH,qD,iBCkCZC,EAhED,SAAC,GAA6D,IAAD,IAA1Dd,KAAQC,EAAkD,EAAlDA,MAAOI,EAA2C,EAA3CA,UAAWF,EAAgC,EAAhCA,OAAQG,EAAwB,EAAxBA,OAAUX,EAAc,EAAdA,QAAc,EACvCoB,mBAAS,IAD8B,mBAClEC,EADkE,KACvDC,EADuD,KAGzEC,qBAAU,YACQ,uCAAG,4BAAAtB,EAAA,sEACcY,IADd,OACXW,EADW,OAGjBF,EAAaE,GAHI,2CAAH,qDAMhBC,KACC,IAEH,IAAMC,EACJpB,EACE,kBAAC,IAAD,CACED,KAAM,CACJsB,OAAQ,CAAC,WAAY,YAAa,SAAU,UAC5CC,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,CAAC,uBAAwB,uBAAwB,yBAA0B,wBAC5FzB,KAAM,CAACC,EAAOI,EAAWC,EAAQH,MAIvCuB,QAAS,CACPC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAsBnC,GAAkB,aAGtE,KAIJqB,EAAU,KACP,IAEWA,EAAUJ,KAAI,qBAAGmB,QAEjBf,EAAUJ,KAAI,SAACZ,GAAD,OAAUA,EAAKgC,aAK7BhB,EAAUJ,KAAI,SAACZ,GAAD,OAAUA,EAAKG,WAY7C,OACE,yBAAK8B,UAAWC,IAAOC,WACpBd,I,mCCtCQe,EArBG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACXtB,mBAAS,IADE,mBACtCJ,EADsC,KAC3B2B,EAD2B,KAW7C,OARApB,qBAAU,YACM,uCAAG,sBAAAtB,EAAA,kEACf0C,EADe,SACI5B,IADJ,6EAAH,qDAId6B,KACC,IAGD,kBAACC,EAAA,EAAD,CAAaP,UAAWC,IAAOO,aAC7B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAOR,EAAoBQ,EAAEC,OAAOC,SAC7E,4BAAQA,MAAM,SAAd,SACIpC,EAAUC,KAAI,SAACjB,EAASqD,GAAV,OAAgB,4BAAQC,IAAKD,EAAGD,MAAOpD,GAAUA,S,uFC+DzDuD,EA9EF,SAAC,GAAqF,IAAD,IAAlFlD,KAAQC,EAA0E,EAA1EA,MAAOC,EAAmE,EAAnEA,WAAYG,EAAuD,EAAvDA,UAAWF,EAA4C,EAA5CA,OAAOC,EAAqC,EAArCA,YAAaE,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,QAChF,OAAKN,EAKH,yBAAKgC,UAAWC,IAAOC,WACrB,kBAACgB,EAAA,EAAD,CAAMhB,WAAS,EAACiB,QAAS,EAAGC,QAAQ,UAClC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMzB,UAAW0B,IAAGzB,IAAO0B,KAAM1B,IAAO2B,WAC3E,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKT,UAAU,MACjC,kBAAC,IAAD,CAASU,MAAO,EAAGC,IAAKnE,EAAOoE,SAAU,KAAMC,UAAU,MAD3D,KAEL,kBAAC,IAAD,CAASH,MAAO,EAAGC,IAAKlE,GAAwB,EAAGmE,SAAU,KAAMC,UAAU,MAFxE,KAIA,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBACf,IAAIO,KAAKhE,GAASiE,gBAErB,kBAACT,EAAA,EAAD,CAAYG,QAAQ,QAAQT,UAAU,KAAtC,2CAKJ,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMzB,UAAW0B,IAAGzB,IAAO0B,KAAM1B,IAAO7B,YAC3E,kBAACyD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKT,UAAU,MACjC,kBAAC,IAAD,CAASU,MAAO,EAAGC,IAAK/D,EAAWgE,SAAU,KAAMC,UAAU,OAE/D,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBACf,IAAIO,KAAKhE,GAASiE,gBAErB,kBAACT,EAAA,EAAD,CAAYG,QAAQ,QAAQT,UAAU,KAAtC,yCAKJ,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMzB,UAAW0B,IAAGzB,IAAO0B,KAAM1B,IAAO5B,SAC3E,kBAACwD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKT,UAAU,MACjC,kBAAC,IAAD,CAASU,MAAO,EAAGC,IAAK9D,EAAQ+D,SAAU,KAAMC,UAAU,OAE5D,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBACf,IAAIO,KAAKhE,GAASiE,gBAErB,kBAACT,EAAA,EAAD,CAAYG,QAAQ,QAAQT,UAAU,KAAtC,yCAKV,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,UAAWC,IAAMzB,UAAW0B,IAAGzB,IAAO0B,KAAM1B,IAAO/B,SACrE,kBAAC2D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKT,UAAU,MACjC,kBAAC,IAAD,CAASU,MAAO,EAAGC,IAAKjE,EAAQkE,SAAU,KAAMC,UAAU,MAD5D,KAEL,kBAAC,IAAD,CAASH,MAAO,EAAGC,IAAKhE,GAA0B,EAAGiE,SAAU,KAAMC,UAAU,MAF1E,KAIA,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBACf,IAAIO,KAAKhE,GAASiE,gBAErB,kBAACT,EAAA,EAAD,CAAYG,QAAQ,QAAQT,UAAU,KAAtC,4CAnED,c,kCC+BIgB,E,4MA/BbC,MAAQ,CACN1E,KAAM,GACNL,QAAS,I,EASX0C,oB,uCAAsB,WAAO1C,GAAP,eAAAC,EAAA,sEACDF,EAAUC,GADT,OACdK,EADc,OAGpB,EAAK2E,SAAS,CAAE3E,OAAML,QAASA,IAHX,2C,wPALDD,I,OAAbM,E,OAEN4E,KAAKD,SAAS,CAAE3E,S,qIASR,IAAD,EACmB4E,KAAKF,MAAvB1E,EADD,EACCA,KAAML,EADP,EACOA,QAEd,OACE,yBAAKsC,UAAWC,IAAOC,WACrB,yBAAKF,UAAWC,IAAO2C,MAAOC,IAAKD,IAAOE,IAAI,aAC9C,kBAACC,EAAD,CAAOhF,KAAMA,IACb,kBAACiF,EAAD,CAAe5C,oBAAqBuC,KAAKvC,sBACzC,kBAAC,EAAD,CAAOrC,KAAMA,EAAML,QAASA,S,GA1BlBuF,IAAMC,WCHxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCJjDhG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCDhCD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.3096ec47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__16DRW\",\"card\":\"Cards_card__3Aq1I\",\"infected\":\"Cards_infected__30NA2\",\"recovered\":\"Cards_recovered___kTOP\",\"active\":\"Cards_active__2_w9F\",\"deaths\":\"Cards_deaths__Y2tgc\"};","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\nconst secondurl = 'https://disease.sh/v2';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = `${secondurl}/all`;\n\n  if (country) {\n    changeableUrl = `${secondurl}/countries/${country}`;\n  }\n  \n  if (country==='World') {\n    changeableUrl = `${secondurl}/all`;\n  }\n\n  try {\n    const { data: { cases, todayCases, deaths, todayDeaths, recovered, active, updated } } = await axios.get(changeableUrl);\n\n    return { cases,todayCases, recovered, deaths,todayDeaths, active, updated };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async (country) => {\n  try {\n    const { data: { timeline } } = await axios.get(`${secondurl}/historical/IN?lastdays=120`);\n\t\n\t \n\n    return {cases:timeline.cases, recovered:timeline.recovered, deaths:timeline.deaths, active:timeline.active};\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { cases, recovered, deaths, active }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    cases ? (\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Active', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [cases, recovered, active, deaths],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country? country: 'World'}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {barChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n\t    <option value=\"World\">World</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: { cases, todayCases, recovered, deaths,todayDeaths, active, updated } }) => {\n  if (!cases) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item xs={12} md={4} component={Card} className={cx(styles.card, styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={cases} duration={2.75} separator=\",\" />\n\t\t\t  [+<CountUp start={0} end={todayCases? todayCases: 0} duration={2.75} separator=\",\" />]\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(updated).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of Infected cases of COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={4} component={Card} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={recovered} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(updated).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of recoveries from COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={4} component={Card} className={cx(styles.card, styles.active)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Active\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={active} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(updated).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of active cases of COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n\t\t<Grid item xs={12} md={4} component={Card} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={deaths} duration={2.75} separator=\",\" />\n\t\t\t  [+<CountUp start={0} end={todayDeaths? todayDeaths: 0} duration={2.75} separator=\",\" />]\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(updated).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of deaths caused by COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default Info;\n","import React from 'react';\n\nimport { Cards, CountryPicker, Chart } from './components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\n\nimport image from './images/image.png';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__188Lh\",\"image\":\"App_image__3Zu8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2nTQI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2Gj5L\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}